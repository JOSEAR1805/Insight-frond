-- MySQL dump 10.13  Distrib 8.0.22, for Linux (x86_64)
--
-- Host: localhost    Database: db_insight_new
-- ------------------------------------------------------
-- Server version	8.0.22-0ubuntu0.20.04.3

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_group` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_group_permissions` (
  `id` int NOT NULL AUTO_INCREMENT,
  `group_id` int NOT NULL,
  `permission_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_permission` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can view log entry',1,'view_logentry'),(5,'Can add permission',2,'add_permission'),(6,'Can change permission',2,'change_permission'),(7,'Can delete permission',2,'delete_permission'),(8,'Can view permission',2,'view_permission'),(9,'Can add group',3,'add_group'),(10,'Can change group',3,'change_group'),(11,'Can delete group',3,'delete_group'),(12,'Can view group',3,'view_group'),(13,'Can add user',4,'add_user'),(14,'Can change user',4,'change_user'),(15,'Can delete user',4,'delete_user'),(16,'Can view user',4,'view_user'),(17,'Can add content type',5,'add_contenttype'),(18,'Can change content type',5,'change_contenttype'),(19,'Can delete content type',5,'delete_contenttype'),(20,'Can view content type',5,'view_contenttype'),(21,'Can add session',6,'add_session'),(22,'Can change session',6,'change_session'),(23,'Can delete session',6,'delete_session'),(24,'Can view session',6,'view_session'),(25,'Can add Token',7,'add_token'),(26,'Can change Token',7,'change_token'),(27,'Can delete Token',7,'delete_token'),(28,'Can view Token',7,'view_token'),(29,'Can add country',8,'add_country'),(30,'Can change country',8,'change_country'),(31,'Can delete country',8,'delete_country'),(32,'Can view country',8,'view_country'),(33,'Can add web',9,'add_web'),(34,'Can change web',9,'change_web'),(35,'Can delete web',9,'delete_web'),(36,'Can view web',9,'view_web'),(37,'Can add search settings',10,'add_searchsettings'),(38,'Can change search settings',10,'change_searchsettings'),(39,'Can delete search settings',10,'delete_searchsettings'),(40,'Can view search settings',10,'view_searchsettings'),(41,'Can add profile',11,'add_profile'),(42,'Can change profile',11,'change_profile'),(43,'Can delete profile',11,'delete_profile'),(44,'Can view profile',11,'view_profile'),(45,'Can add tender',12,'add_tender'),(46,'Can change tender',12,'change_tender'),(47,'Can delete tender',12,'delete_tender'),(48,'Can view tender',12,'view_tender'),(49,'Can add privilege',13,'add_privilege'),(50,'Can change privilege',13,'change_privilege'),(51,'Can delete privilege',13,'delete_privilege'),(52,'Can view privilege',13,'view_privilege');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user` (
  `id` int NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(150) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'secret123','2021-01-06 19:59:03.594887',0,'Admin','Admin','Admin','admin@admin.com',1,1,'2021-01-06 19:54:31.986930');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user_groups` (
  `id` int NOT NULL AUTO_INCREMENT,
  `user_id` int NOT NULL,
  `group_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_privilege`
--

DROP TABLE IF EXISTS `auth_user_privilege`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user_privilege` (
  `id` int NOT NULL AUTO_INCREMENT,
  `profile_id` varchar(255) NOT NULL,
  `countries_ids` varchar(255) NOT NULL,
  `tenders` tinyint(1) NOT NULL,
  `webs` tinyint(1) NOT NULL,
  `profiles` tinyint(1) NOT NULL,
  `users` tinyint(1) NOT NULL,
  `image` longblob,
  `user_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`),
  CONSTRAINT `auth_user_privilege_user_id_68454b4d_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_privilege`
--

LOCK TABLES `auth_user_privilege` WRITE;
/*!40000 ALTER TABLE `auth_user_privilege` DISABLE KEYS */;
INSERT INTO `auth_user_privilege` VALUES (1,'','',0,0,0,0,_binary '',1);
/*!40000 ALTER TABLE `auth_user_privilege` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int NOT NULL AUTO_INCREMENT,
  `user_id` int NOT NULL,
  `permission_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `authtoken_token`
--

DROP TABLE IF EXISTS `authtoken_token`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `authtoken_token` (
  `key` varchar(40) NOT NULL,
  `created` datetime(6) NOT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`key`),
  UNIQUE KEY `user_id` (`user_id`),
  CONSTRAINT `authtoken_token_user_id_35299eff_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `authtoken_token`
--

LOCK TABLES `authtoken_token` WRITE;
/*!40000 ALTER TABLE `authtoken_token` DISABLE KEYS */;
INSERT INTO `authtoken_token` VALUES ('352b2072965943f102e7a7cb3383c710c7b9fbb5','2021-01-06 20:13:12.161263',1);
/*!40000 ALTER TABLE `authtoken_token` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `countries_country`
--

DROP TABLE IF EXISTS `countries_country`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `countries_country` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `code` varchar(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=241 DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `countries_country`
--

LOCK TABLES `countries_country` WRITE;
/*!40000 ALTER TABLE `countries_country` DISABLE KEYS */;
INSERT INTO `countries_country` VALUES (1,'Afganistán','AF'),(2,'Islas Gland','AX'),(3,'Albania','AL'),(4,'Alemania','DE'),(5,'Andorra','AD'),(6,'Angola','AO'),(7,'Anguilla','AI'),(8,'Antártida','AQ'),(9,'Antigua y Barbuda','AG'),(10,'Antillas Holandesas','AN'),(11,'Arabia Saudí','SA'),(12,'Argelia','DZ'),(13,'Argentina','AR'),(14,'Armenia','AM'),(15,'Aruba','AW'),(16,'Australia','AU'),(17,'Austria','AT'),(18,'Azerbaiyán','AZ'),(19,'Bahamas','BS'),(20,'Bahréin','BH'),(21,'Bangladesh','BD'),(22,'Barbados','BB'),(23,'Bielorrusia','BY'),(24,'Bélgica','BE'),(25,'Belice','BZ'),(26,'Benin','BJ'),(27,'Bermudas','BM'),(28,'Bhután','BT'),(29,'Bolivia','BO'),(30,'Bosnia y Herzegovina','BA'),(31,'Botsuana','BW'),(32,'Isla Bouvet','BV'),(33,'Brasil','BR'),(34,'Brunéi','BN'),(35,'Bulgaria','BG'),(36,'Burkina Faso','BF'),(37,'Burundi','BI'),(38,'Cabo Verde','CV'),(39,'Islas Caimán','KY'),(40,'Camboya','KH'),(41,'Camerún','CM'),(42,'Canadá','CA'),(43,'República Centroafricana','CF'),(44,'Chad','TD'),(45,'República Checa','CZ'),(46,'Chile','CL'),(47,'China','CN'),(48,'Chipre','CY'),(49,'Isla de Navidad','CX'),(50,'Ciudad del Vaticano','VA'),(51,'Islas Cocos','CC'),(52,'Colombia','CO'),(53,'Comoras','KM'),(54,'República Democrática del Congo','CD'),(55,'Congo','CG'),(56,'Islas Cook','CK'),(57,'Corea del Norte','KP'),(58,'Corea del Sur','KR'),(59,'Costa de Marfil','CI'),(60,'Costa Rica','CR'),(61,'Croacia','HR'),(62,'Cuba','CU'),(63,'Dinamarca','DK'),(64,'Dominica','DM'),(65,'República Dominicana','DO'),(66,'Ecuador','EC'),(67,'Egipto','EG'),(68,'El Salvador','SV'),(69,'Emiratos Árabes Unidos','AE'),(70,'Eritrea','ER'),(71,'Eslovaquia','SK'),(72,'Eslovenia','SI'),(73,'España','ES'),(74,'Islas ultramarinas de Estados Unidos','UM'),(75,'Estados Unidos','US'),(76,'Estonia','EE'),(77,'Etiopía','ET'),(78,'Islas Feroe','FO'),(79,'Filipinas','PH'),(80,'Finlandia','FI'),(81,'Fiyi','FJ'),(82,'Francia','FR'),(83,'Gabón','GA'),(84,'Gambia','GM'),(85,'Georgia','GE'),(86,'Islas Georgias del Sur y Sandwich del Sur','GS'),(87,'Ghana','GH'),(88,'Gibraltar','GI'),(89,'Granada','GD'),(90,'Grecia','GR'),(91,'Groenlandia','GL'),(92,'Guadalupe','GP'),(93,'Guam','GU'),(94,'Guatemala','GT'),(95,'Guayana Francesa','GF'),(96,'Guinea','GN'),(97,'Guinea Ecuatorial','GQ'),(98,'Guinea-Bissau','GW'),(99,'Guyana','GY'),(100,'Haití','HT'),(101,'Islas Heard y McDonald','HM'),(102,'Honduras','HN'),(103,'Hong Kong','HK'),(104,'Hungría','HU'),(105,'India','IN'),(106,'Indonesia','ID'),(107,'Irán','IR'),(108,'Iraq','IQ'),(109,'Irlanda','IE'),(110,'Islandia','IS'),(111,'Israel','IL'),(112,'Italia','IT'),(113,'Jamaica','JM'),(114,'Japón','JP'),(115,'Jordania','JO'),(116,'Kazajstán','KZ'),(117,'Kenia','KE'),(118,'Kirguistán','KG'),(119,'Kiribati','KI'),(120,'Kuwait','KW'),(121,'Laos','LA'),(122,'Lesotho','LS'),(123,'Letonia','LV'),(124,'Líbano','LB'),(125,'Liberia','LR'),(126,'Libia','LY'),(127,'Liechtenstein','LI'),(128,'Lituania','LT'),(129,'Luxemburgo','LU'),(130,'Macao','MO'),(131,'ARY Macedonia','MK'),(132,'Madagascar','MG'),(133,'Malasia','MY'),(134,'Malawi','MW'),(135,'Maldivas','MV'),(136,'Malí','ML'),(137,'Malta','MT'),(138,'Islas Malvinas','FK'),(139,'Islas Marianas del Norte','MP'),(140,'Marruecos','MA'),(141,'Islas Marshall','MH'),(142,'Martinica','MQ'),(143,'Mauricio','MU'),(144,'Mauritania','MR'),(145,'Mayotte','YT'),(146,'México','MX'),(147,'Micronesia','FM'),(148,'Moldavia','MD'),(149,'Mónaco','MC'),(150,'Mongolia','MN'),(151,'Montserrat','MS'),(152,'Mozambique','MZ'),(153,'Myanmar','MM'),(154,'Namibia','NA'),(155,'Nauru','NR'),(156,'Nepal','NP'),(157,'Nicaragua','NI'),(158,'Níger','NE'),(159,'Nigeria','NG'),(160,'Niue','NU'),(161,'Isla Norfolk','NF'),(162,'Noruega','NO'),(163,'Nueva Caledonia','NC'),(164,'Nueva Zelanda','NZ'),(165,'Omán','OM'),(166,'Países Bajos','NL'),(167,'Pakistán','PK'),(168,'Palau','PW'),(169,'Palestina','PS'),(170,'Panamá','PA'),(171,'Papúa Nueva Guinea','PG'),(172,'Paraguay','PY'),(173,'Perú','PE'),(174,'Islas Pitcairn','PN'),(175,'Polinesia Francesa','PF'),(176,'Polonia','PL'),(177,'Portugal','PT'),(178,'Puerto Rico','PR'),(179,'Qatar','QA'),(180,'Reino Unido','GB'),(181,'Reunión','RE'),(182,'Ruanda','RW'),(183,'Rumania','RO'),(184,'Rusia','RU'),(185,'Sahara Occidental','EH'),(186,'Islas Salomón','SB'),(187,'Samoa','WS'),(188,'Samoa Americana','AS'),(189,'San Cristóbal y Nevis','KN'),(190,'San Marino','SM'),(191,'San Pedro y Miquelón','PM'),(192,'San Vicente y las Granadinas','VC'),(193,'Santa Helena','SH'),(194,'Santa Lucía','LC'),(195,'Santo Tomé y Príncipe','ST'),(196,'Senegal','SN'),(197,'Serbia y Montenegro','CS'),(198,'Seychelles','SC'),(199,'Sierra Leona','SL'),(200,'Singapur','SG'),(201,'Siria','SY'),(202,'Somalia','SO'),(203,'Sri Lanka','LK'),(204,'Suazilandia','SZ'),(205,'Sudáfrica','ZA'),(206,'Sudán','SD'),(207,'Suecia','SE'),(208,'Suiza','CH'),(209,'Surinam','SR'),(210,'Svalbard y Jan Mayen','SJ'),(211,'Tailandia','TH'),(212,'Taiwán','TW'),(213,'Tanzania','TZ'),(214,'Tayikistán','TJ'),(215,'Territorio Británico del Océano Índico','IO'),(216,'Territorios Australes Franceses','TF'),(217,'Timor Oriental','TL'),(218,'Togo','TG'),(219,'Tokelau','TK'),(220,'Tonga','TO'),(221,'Trinidad y Tobago','TT'),(222,'Túnez','TN'),(223,'Islas Turcas y Caicos','TC'),(224,'Turkmenistán','TM'),(225,'Turquía','TR'),(226,'Tuvalu','TV'),(227,'Ucrania','UA'),(228,'Uganda','UG'),(229,'Uruguay','UY'),(230,'Uzbekistán','UZ'),(231,'Vanuatu','VU'),(232,'Venezuela','VE'),(233,'Vietnam','VN'),(234,'Islas Vírgenes Británicas','VG'),(235,'Islas Vírgenes de los Estados Unidos','VI'),(236,'Wallis y Futuna','WF'),(237,'Yemen','YE'),(238,'Yibuti','DJ'),(239,'Zambia','ZM'),(240,'Zimbabue','ZW');
/*!40000 ALTER TABLE `countries_country` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_admin_log` (
  `id` int NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int DEFAULT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_auth_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `django_admin_log_chk_1` CHECK ((`action_flag` >= 0))
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_content_type` (
  `id` int NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(4,'auth','user'),(13,'auth_user','privilege'),(7,'authtoken','token'),(5,'contenttypes','contenttype'),(8,'countries','country'),(11,'profiles','profile'),(10,'search_settings','searchsettings'),(6,'sessions','session'),(12,'tenders','tender'),(9,'webs','web');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_migrations` (
  `id` int NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2021-01-06 19:10:55.880200'),(2,'auth','0001_initial','2021-01-06 19:10:56.209261'),(3,'admin','0001_initial','2021-01-06 19:10:57.075426'),(4,'admin','0002_logentry_remove_auto_add','2021-01-06 19:10:57.323696'),(5,'admin','0003_logentry_add_action_flag_choices','2021-01-06 19:10:57.353129'),(6,'contenttypes','0002_remove_content_type_name','2021-01-06 19:10:57.450583'),(7,'auth','0002_alter_permission_name_max_length','2021-01-06 19:10:57.510912'),(8,'auth','0003_alter_user_email_max_length','2021-01-06 19:10:57.541884'),(9,'auth','0004_alter_user_username_opts','2021-01-06 19:10:57.555503'),(10,'auth','0005_alter_user_last_login_null','2021-01-06 19:10:57.605564'),(11,'auth','0006_require_contenttypes_0002','2021-01-06 19:10:57.610746'),(12,'auth','0007_alter_validators_add_error_messages','2021-01-06 19:10:57.621587'),(13,'auth','0008_alter_user_username_max_length','2021-01-06 19:10:57.694905'),(14,'auth','0009_alter_user_last_name_max_length','2021-01-06 19:10:57.755790'),(15,'auth','0010_alter_group_name_max_length','2021-01-06 19:10:57.779422'),(16,'auth','0011_update_proxy_permissions','2021-01-06 19:10:57.798005'),(17,'auth','0012_alter_user_first_name_max_length','2021-01-06 19:10:57.891702'),(18,'auth_user','0001_initial','2021-01-06 19:10:57.978277'),(19,'authtoken','0001_initial','2021-01-06 19:10:58.074026'),(20,'authtoken','0002_auto_20160226_1747','2021-01-06 19:10:58.205869'),(21,'countries','0001_initial','2021-01-06 19:10:58.228936'),(22,'profiles','0001_initial','2021-01-06 19:10:58.278435'),(23,'search_settings','0001_initial','2021-01-06 19:10:58.318219'),(24,'sessions','0001_initial','2021-01-06 19:10:58.525774'),(25,'tenders','0001_initial','2021-01-06 19:10:58.588011'),(26,'webs','0001_initial','2021-01-06 19:10:58.670448');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `profiles_profile`
--

DROP TABLE IF EXISTS `profiles_profile`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `profiles_profile` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `description` varchar(255) NOT NULL,
  `search_parameters` longtext NOT NULL,
  `discard_parameters` longtext NOT NULL,
  `created` datetime(6) NOT NULL,
  `modified` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `profiles_profile`
--

LOCK TABLES `profiles_profile` WRITE;
/*!40000 ALTER TABLE `profiles_profile` DISABLE KEYS */;
INSERT INTO `profiles_profile` VALUES (1,'Perfil Test 001','esto es una prueba','consult','nation','2021-01-07 00:49:36.422675','2021-01-07 00:49:36.422726');
/*!40000 ALTER TABLE `profiles_profile` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `search_settings_searchsettings`
--

DROP TABLE IF EXISTS `search_settings_searchsettings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `search_settings_searchsettings` (
  `id` int NOT NULL AUTO_INCREMENT,
  `created` datetime(6) NOT NULL,
  `modified` datetime(6) NOT NULL,
  `country_id` int NOT NULL,
  `profile_id` int NOT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `search_settings_sear_country_id_bd2d9b3c_fk_countries` (`country_id`),
  KEY `search_settings_sear_profile_id_938a9f21_fk_profiles_` (`profile_id`),
  KEY `search_settings_searchsettings_user_id_33045ee6_fk_auth_user_id` (`user_id`),
  CONSTRAINT `search_settings_sear_country_id_bd2d9b3c_fk_countries` FOREIGN KEY (`country_id`) REFERENCES `countries_country` (`id`),
  CONSTRAINT `search_settings_sear_profile_id_938a9f21_fk_profiles_` FOREIGN KEY (`profile_id`) REFERENCES `profiles_profile` (`id`),
  CONSTRAINT `search_settings_searchsettings_user_id_33045ee6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `search_settings_searchsettings`
--

LOCK TABLES `search_settings_searchsettings` WRITE;
/*!40000 ALTER TABLE `search_settings_searchsettings` DISABLE KEYS */;
/*!40000 ALTER TABLE `search_settings_searchsettings` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tenders_tender`
--

DROP TABLE IF EXISTS `tenders_tender`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tenders_tender` (
  `id` int NOT NULL AUTO_INCREMENT,
  `description` longtext NOT NULL,
  `code` varchar(255) NOT NULL,
  `place_of_execution` varchar(255) NOT NULL,
  `awarning_authority` varchar(255) NOT NULL,
  `link` varchar(255) NOT NULL,
  `tender_viewed` tinyint(1) NOT NULL,
  `publication_date` varchar(255) NOT NULL,
  `closing_date` varchar(255) NOT NULL,
  `created` datetime(6) NOT NULL,
  `modified` datetime(6) NOT NULL,
  `status` varchar(100) NOT NULL,
  `country_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `tenders_tender_country_id_086cdd76_fk_countries_country_id` (`country_id`),
  CONSTRAINT `tenders_tender_country_id_086cdd76_fk_countries_country_id` FOREIGN KEY (`country_id`) REFERENCES `countries_country` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=138 DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tenders_tender`
--

LOCK TABLES `tenders_tender` WRITE;
/*!40000 ALTER TABLE `tenders_tender` DISABLE KEYS */;
/*!40000 ALTER TABLE `tenders_tender` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `webs_web`
--

DROP TABLE IF EXISTS `webs_web`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `webs_web` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `url` varchar(255) NOT NULL,
  `search_parameters` longtext NOT NULL,
  `status` int NOT NULL,
  `created` datetime(6) NOT NULL,
  `modified` datetime(6) NOT NULL,
  `country_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `webs_web_country_id_dcd989d5_fk_countries_country_id` (`country_id`),
  CONSTRAINT `webs_web_country_id_dcd989d5_fk_countries_country_id` FOREIGN KEY (`country_id`) REFERENCES `countries_country` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `webs_web`
--

LOCK TABLES `webs_web` WRITE;
/*!40000 ALTER TABLE `webs_web` DISABLE KEYS */;
INSERT INTO `webs_web` VALUES (1,'UNDP','https://procurement-notices.undp.org/','consult, supply, request, examine',1,'2021-01-07 15:47:31.000000','2021-01-07 15:47:31.000000',1),(2,'Rds Empleos','https://rds-empleos.hn/plazas/category/17','dasda\r\n',1,'2021-01-08 13:33:29.000000','2021-01-08 13:33:29.000000',1),(3,'Acnur','https://www.acnur.org/search','dsadasd',1,'2021-01-08 13:34:25.000000','2021-01-08 13:34:25.000000',1),(4,'Bcie','https://adquisiciones.bcie.org/avisos-de-adquisicion','dssdfsd',1,'2021-01-08 13:35:34.000000','2021-01-08 13:35:34.000000',1),(5,'Globaltenders','https://www.globaltenders.com/government-tenders-latin-america.php','dsada',1,'2021-01-08 13:36:28.000000','2021-01-08 13:36:28.000000',1),(6,'IOM','https://www.iom.int/procurement-opportunities','dasdas',1,'2021-01-08 13:37:07.000000','2021-01-08 13:37:07.000000',1);
/*!40000 ALTER TABLE `webs_web` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-01-08 13:47:26
